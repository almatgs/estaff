"META:NAMESPACE:ui_server"


"META:ALLOW-CALL-FROM-CLIENT:1"
function BuildExcelFileFromQuerySpec( querySpec )
{
	//queryStr = BuildXQueryFromQuerySpec( querySpec );
	queryStr = querySpec.xquery_str;
	//DebugMsg( queryStr );

	array = XQuery( queryStr );

	catalog = DefaultDb.GetOptCatalog( querySpec.catalog_name );
	recordFormElem = catalog.Form.TopElem[0];

	AdjustQuerySpec( querySpec );

	destDir = 'x-local://share/uploaded_files/' + UniqueStrID( 32 );
	destFileUrl = destDir + '/List.xlsx';
	ObtainDirectory( destDir );

	excelBuilder = OpenNewDoc( '//base1/base1_excel_builder.xml' ).TopElem;
	excelBuilder.Init();
	ExportExcelColumns( querySpec, excelBuilder );
	ExportExcelHeader( querySpec, excelBuilder, recordFormElem );
	
	for ( record in array )
	{
		ExportExcelRecord( querySpec, excelBuilder, recordFormElem, record );
	}
	
	excelBuilder.SaveToFile( destFileUrl );

	respInfo = new Object;
	respInfo.fileUrl = destFileUrl;
	return respInfo;
}


function AdjustQuerySpec( querySpec )
{
	catalog = DefaultDb.GetOptCatalog( querySpec.catalog_name );
	recordFormElem = catalog.Form.TopElem[0];

	for ( columnSpec in querySpec.columns )
	{
		formElem = recordFormElem.OptChild( columnSpec.id );
		
		dataType = undefined;
		if ( formElem != undefined )
			dataType = formElem.ResultDataType;

		if ( columnSpec.title == undefined )
		{
			if ( formElem != undefined )
			{
				columnSpec.title = formElem.Title;
			}
		}

		if ( columnSpec.align == undefined )
		{
			if ( dataType == 'date' )
				columnSpec.align = 'center';
			else if ( dataType == 'bool' )
				columnSpec.align = 'center';
		}

		if ( columnSpec.width == undefined )
		{
			if ( dataType == 'date' )
			{
				if ( columnSpec.show_time_only )
					columnSpec.width = '6zr';
				else
					columnSpec.width = columnSpec.show_time ? '16zr' : '10zr';
			}
			else if ( dataType == 'bool' )
			{
				columnSpec.width = '6zr';
			}
		}
	}
}


function ExportExcelColumns( querySpec, excelBuilder )
{
	columnWidths = new Array;

	sumFixedWidth = 0;

	for ( i = 0; i < querySpec.columns.length; i++ )
	{
		columnSpec = querySpec.columns[i];
		if ( ( obj = StrOptScan( columnSpec.width, '%szr' ) ) != undefined )
			width = Int( obj[0] );
		else if ( ( obj = StrOptScan( columnSpec.width, '%szrc' ) ) != undefined )
			width = Int( obj[0] );
		else if ( ( obj = StrOptScan( columnSpec.width, '%s%%' ) ) != undefined )
			continue;
		else
			width = 30;

		columnWidths[i] = width;
		sumFixedWidth += width;
	}

	restWidth = Max( 170 - sumFixedWidth, 50 );

	for ( i = 0; i < querySpec.columns.length; i++ )
	{
		columnSpec = querySpec.columns[i];
		if ( ( obj = StrOptScan( columnSpec.width, '%s%%' ) ) != undefined )
			width = ( restWidth * Int( obj[0] ) ) / 100;
		else
			continue;

		//DebugMsg( columnSpec.width + ' ' + width );
		columnWidths[i] = width;
	}

	excelBuilder.SetColumnWidths( columnWidths );
}


function ExportExcelHeader( querySpec, excelBuilder, recordFormElem )
{
	excelBuilder.AddRow();
	for ( columnSpec in querySpec.columns )
	{
		cellData = excelBuilder.CreateCellData();
		
		cellData.value = columnSpec.title;

		cellData.bkColor = '217,217,217';
		cellData.border = true;
		cellData.horizAlign = 'center';
		cellData.wrapText = true;

		excelBuilder.AddCell( cellData );
	}
}


function ExportExcelRecord( querySpec, excelBuilder, recordFormElem, record )
{
	excelBuilder.AddRow();

	for ( columnSpec in querySpec.columns )
	{
		formElem = recordFormElem.EvalOptPath( columnSpec.id );
		if ( columnSpec.value_expr == undefined )
		{
			if ( StrContains( columnSpec.id, '.' ) )
				elem = record.EvalPath( columnSpec.id );
			else
				elem = GetObjectProperty( record, columnSpec.id );
		}
		else
		{
			elem = undefined;
		}

		indentStr = '';//lib_stat_v2.GetItemCellIndentStr( dest, item, field, fieldSpec );
		
		if ( formElem != undefined && formElem.ForeignArrayExpr != '' )
			vocInfo = lib_voc.get_opt_voc_info( formElem.ForeignArrayExpr );
		else
			vocInfo = undefined;

		if ( columnSpec.value_expr != undefined )
		{
			with ( record )
			{
				value = eval( columnSpec.value_expr );
			}
		}
		else if ( formElem != undefined && formElem.ForeignArrayExpr != '' )
		{
			value = elem.ForeignDispName;
		}
		else if ( formElem != undefined && formElem.ResultDataType == 'date' )
		{
			if ( columnSpec.show_time_only )
				value = StrTime( elem.Value );
			else
				value = StrDate( elem.Value, columnSpec.show_time, false );
		}
		else if ( formElem.ResultDataType == 'bool' )
		{
			value = ( elem ? '+' : '' );
		}
		else
		{
			value = elem;
		}

		cellData = excelBuilder.CreateCellData();
		cellData.value = ( ( indentStr != '' ) ? indentStr + value : value );

		//if ( DataType( value ) == 'string' )// && ( StrContains( value, '\n' ) || StrContains( value, '\n' ) ) )
			//cellData.wrapText = true;

		cellData.border = true;
		
		if ( columnSpec.text_color_expr != undefined )
		{
			with ( record )
			{
				cellData.textColor = eval( columnSpec.text_color_expr );
			}
		}
		else if ( vocInfo != undefined && vocInfo.use_text_color )
		{
			cellData.textColor = elem.ForeignElem.text_color;
		}

		if ( columnSpec.bk_color_expr != undefined )
		{
			with ( record )
			{
				cellData.bkColor = eval( columnSpec.bk_color_expr );
			}
		}
		else if ( vocInfo != undefined && vocInfo.use_bk_color  )
		{
			cellData.bkColor = elem.ForeignElem.bk_color;
		}
		
		if ( columnSpec.align != undefined )
			cellData.horizAlign = columnSpec.align;

		excelBuilder.AddCell( cellData );
	}
}


/*function BuildXQueryFromQuerySpec( querySpec )
{
	queryStr = 'for $elem in ' + querySpec.catalog_name;

	if ( querySpec.xquery_qual_str != undefined && querySpec.xquery_qual_str != '' )
		queryStr += ' where ' + querySpec.xquery_qual_str;

	if ( querySpec.xquery_order_str != undefined && querySpec.xquery_order_str != '' )
		queryStr += ' order by ' + querySpec.xquery_order_str;

	queryStr += ' return $elem';
	return queryStr;
}*/



